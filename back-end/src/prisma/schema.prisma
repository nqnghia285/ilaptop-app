// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
   provider           = "typegraphql-prisma"
   output             = "../../node_modules/@generated/type-graphql"
   emitTranspiledCode = true
   useOriginalMapping = false
}

// generator typegraphql {
//   provider           = "typegraphql-prisma"
//   output             = "../prisma/generated/type-graphql"
//   emitTranspiledCode = false
//   useOriginalMapping = false
// }

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  STAFF
}

enum OS {
  FREEDOS
  WINDOWS
  MACOS
  LINUX
  ANDROID
}

enum Rank {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

model Person {
  id        String    @id @default(uuid()) @db.Uuid
  fullname  String    @db.VarChar(60)
  gender    Gender    @default(MALE)
  phone     String    @unique @db.VarChar(20)
  email     String?   @unique @db.VarChar(30)
  address   String    @default("None") @db.VarChar(255)
  user      User?
  customer  Customer?
  comments  Comment[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model Customer {
  id        String     @id @db.Uuid
  profile   Person     @relation(fields: [id], references: [id])
  purchases Purchase[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
}

model User {
  id        String   @id @db.Uuid
  profile   Person   @relation(fields: [id], references: [id])
  /// @TypeGraphQL.omit(output: true)
  password  String   @db.VarChar(60)
  role      Role     @default(STAFF)
  posts     Post[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Laptop {
  id                  Int        @id @default(autoincrement()) @db.SmallInt
  brand               String     @default("None") @db.VarChar(255)
  model               String     @default("None") @db.VarChar(255)
  material            String     @default("None") @db.VarChar(255)
  display             String     @default("None") @db.VarChar(255)
  cpu                 String     @default("None") @db.VarChar(255)
  ram                 String     @default("None") @db.VarChar(255)
  graphicCard         String     @default("None") @map("graphic_card") @db.VarChar(255)
  ports               String     @default("None") @db.VarChar(255)
  wifi                String     @default("None") @db.VarChar(255)
  storage             String     @default("None") @db.VarChar(255)
  webcam              String     @default("None") @db.VarChar(255)
  fans                String     @default("None") @db.VarChar(255)
  speakers            String     @default("None") @db.VarChar(255)
  keyboard            String     @default("None") @db.VarChar(255)
  security            String     @default("None") @db.VarChar(255)
  adapter             String     @default("None") @db.VarChar(255)
  specialFeatures     String     @default("None") @map("special_features") @db.VarChar(255)
  dimensionsAndWeight String     @default("None") @map("dimensions_and_weight") @db.VarChar(255)
  releaseDate         DateTime   @default(now()) @map("release_date")
  os                  OS         @default(WINDOWS)
  priceMap            PriceMap?  @relation(fields: [priceMapId], references: [id])
  priceMapId          Int?       @map("price_map_id") @db.SmallInt
  discount            Discount?  @relation(fields: [discountId], references: [id])
  discountId          Int?       @map("discount_id") @db.SmallInt
  purchases           Purchase[]
  posts               Post[]
  comments            Comment[]
  createdAt           DateTime   @default(now()) @map("created_at")
  updatedAt           DateTime   @updatedAt @map("updated_at")
}

model Comment {
  id        Int       @id @default(autoincrement()) @db.SmallInt
  rank      Rank      @default(FIVE)
  content   String    @db.VarChar(400)
  author    Person    @relation(fields: [authorId], references: [id])
  authorId  String    @map("author_id") @db.Uuid
  isStaff   Boolean   @default(false) @map("is_staff")
  laptop    Laptop    @relation(fields: [laptopId], references: [id])
  laptopId  Int       @map("laptop_id") @db.SmallInt
  comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
  commentId Int?      @map("comment_id") @db.SmallInt
  comments  Comment[] @relation("CommentToComment")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model PriceMap {
  id        Int      @id @default(autoincrement()) @db.SmallInt
  price     Float    @unique @default(0) @db.Real
  laptops   Laptop[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Discount {
  id        Int      @id @default(autoincrement()) @db.SmallInt
  value     Float    @unique @default(0) @db.Real
  laptops   Laptop[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Purchase {
  id         Int      @id @default(autoincrement()) @db.SmallInt
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id") @db.Uuid
  laptops    Laptop[]
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}

model Passage {
  id      Int    @id @default(autoincrement()) @db.SmallInt
  header  String @db.VarChar(150)
  content String @db.Text
  Post    Post   @relation(fields: [postId], references: [id])
  postId  Int    @map("post_id") @db.SmallInt
}

model Post {
  id        Int       @id @default(autoincrement()) @db.SmallInt
  title     String    @db.VarChar(255)
  passages  Passage[]
  laptops   Laptop[]
  author    User      @relation(fields: [userId], references: [id])
  userId    String    @map("user_id") @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}
